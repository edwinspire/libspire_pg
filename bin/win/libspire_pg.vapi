/* libspire_pg.vapi generated by valac.exe 0.12.0, do not modify. */

[CCode (cprefix = "edwinspire", lower_case_cprefix = "edwinspire_")]
namespace edwinspire {
	[CCode (cprefix = "edwinspirepgSQL", lower_case_cprefix = "edwinspire_pg_sql_")]
	namespace pgSQL {
		[CCode (cheader_filename = "libspire_pg.h")]
		public class PSQLMisc : GLib.Object {
			public PSQLMisc ();
			public static string ConnInfo (string Host = "", uint Port = 0, string DBName = "", string User = "", string Password = "", bool SSL = false, uint TimeOut = 30);
			public static Gee.ArrayList<Gee.HashMap<string,string>> Result_FieldName (Postgres.Result ResultPostgres);
			public static Gee.ArrayList<Gee.HashMap<int,string>> Result_FieldNum (Postgres.Result ResultPostgres);
			public static bool TryConnect (string Connection);
		}
		[CCode (cheader_filename = "libspire_pg.h")]
		public class PgConnBuilder : GLib.Object {
			public string DataBase;
			public string Host;
			public string Password;
			public uint Port;
			public bool SSL;
			public uint TimeOut;
			public string User;
			public PgConnBuilder ();
			public string ConnInfo ();
		}
		[CCode (cheader_filename = "libspire_pg.h")]
		public class QueryBuilder : GLib.Object {
			public QueryBuilder ();
			public void ClearValues ();
			public string Return ();
			public void set_variable (string NameVar, GLib.Value ValueVar);
			public QueryBuilder.with_query (string Query);
			public string Query { get; set; }
		}
		[CCode (cheader_filename = "libspire_pg.h")]
		public class QueryString : edwinspire.pgSQL.QueryBuilder {
			public QueryString ();
		}
		[CCode (cheader_filename = "libspire_pg.h")]
		public class ResultPg : GLib.Object {
			public ResultPg (Postgres.Result ResultPostg_);
			public global::bool bool (GLib.Value field);
			public global::double double (GLib.Value field);
			public global::int int (GLib.Value field);
			public global::int64 int64 (GLib.Value field);
			public global::long long (GLib.Value field);
			public global::string string (GLib.Value field);
			public global::uint64 uint64 (GLib.Value field);
			public global::ulong ulong (GLib.Value field);
			public global::int Row { get; set; }
			public global::int Rows { get; }
		}
	}
}
